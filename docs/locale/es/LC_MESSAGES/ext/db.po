# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, JulioLoayzaM
# This file is distributed under the same license as the CroissantBot
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CroissantBot \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-04-16 12:35+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../ext/db.rst:2 6cc9b19c43be4674b6d383234b73ae3d
msgid "db module"
msgstr ""

#: db:1 f1dcb85955ff4f739079363d824506c3 of
msgid "For all database connection needs."
msgstr ""

#: 1dac04e973464dcca4b9a3dc15ede9af db:3 of
msgid "This module provides:"
msgstr ""

#: 20462a5473be4eb8a1f8635d84cc5ecc db:7 of
msgid ":py:class:`DatabaseConnection`:"
msgstr ""

#: 5542c8cb88ec41b8bf405b3da2da15b7 db:6 of
msgid ""
"The base class with three methods: :py:func:`DatabaseConnection.connect`,"
" :py:func:`DatabaseConnection.close` and "
":py:func:`DatabaseConnection.is_connected`."
msgstr ""

#: db:12 f7218469c02c4f5e81e5f9874e2d735d of
msgid ":py:class:`MusicDatabaseConnection`:"
msgstr ""

#: daddb5a866ef4691aa872ce0a4d2e52e db:10 of
msgid ""
"A class to provide an interface for managing the playlists stored in the "
"database."
msgstr ""

#: c859bd303c214321aff2523d1b3c0a0a db.DatabaseConnection:1 of
msgid "Bases: :py:class:`object`"
msgstr ""

#: 2444d4beacab4602820ddbaa151dc5fb db.DatabaseConnection:1 of
msgid "The base class to represent a connection to a PostgreSQL database."
msgstr ""

#: 02fe9d35896442c1a13865a48ccec71d 085b3c172f4a4f8b9b7696387035714d
#: 0b23d4c2d77f4b8691f782af4304060d 1ca9fa4647414336856963919d0a5b5c
#: 1d7645c4ba6a4bb18cd352bf9f408f3f 2c6fd73c737449bd90a1e539453c5fc0
#: 4325ea4a825d44ad9b3a4fdd54f0c1c0 5177aa781b4f4a6eae0fa21efd2e5402
#: 8c11a597995348e5b4978c7c0fe32e26 97331668acba4756bff0f7ff514093a9
#: 9aed6f200e42466d8e7761a81ecbd166 a2833ecc310a4199bdb70e54b08d38f6
#: a4388f0bb5fd43c68f2d4bf8898f4080 a5984cc297fa4629869730934772ee9d
#: a725dbea4ce04dd48bfd83da20dccf12 af25592df5c6400c8aedf08d73caa806
#: db.DatabaseConnection db.DatabaseConnection.connect
#: db.MusicDatabaseConnection db.MusicDatabaseConnection.add_song_to_playlist
#: db.MusicDatabaseConnection.create_playlist
#: db.MusicDatabaseConnection.delete_playlist
#: db.MusicDatabaseConnection.get_playlist_id
#: db.MusicDatabaseConnection.get_playlists
#: db.MusicDatabaseConnection.get_song_from
#: db.MusicDatabaseConnection.get_song_id
#: db.MusicDatabaseConnection.get_song_url
#: db.MusicDatabaseConnection.get_songs_in_playlist
#: db.MusicDatabaseConnection.get_titles
#: db.MusicDatabaseConnection.get_titles_in_playlist
#: db.MusicDatabaseConnection.get_urls db.MusicDatabaseConnection.insert_song
#: db.MusicDatabaseConnection.match_song_to_playlist
#: db.MusicDatabaseConnection.playlist_exists
#: db.MusicDatabaseConnection.remove_song_from
#: db.MusicDatabaseConnection.song_exists
#: db.MusicDatabaseConnection.song_matches_playlist
#: e4706bd78dfc4aac8c8057a92eaf342e e4ff2ebdbe5143e485e4e6dd9f3fc81a
#: eb8600cad9f942f68cf545ab93219b21 eea0f03f75f941f48137a3799acd11ce
#: f7db291f098743729a3d26af1d75615c of
msgid "Parameters"
msgstr ""

#: db.DatabaseConnection:3 e76bc282372846de958bc347d4bb507c of
msgid "The name of the logger to be used by the connection."
msgstr ""

#: db.DatabaseConnection.connect:1 e945ea8ef86b4bdf94f217b133e74a96 of
msgid ""
"Connect to a database using the credentials provided. Stores connection "
"in `self.conn`."
msgstr ""

#: b1194456986e4e348a4d53cecb862d2b db.DatabaseConnection.connect:3 of
msgid "The hostname, usually 'localhost'."
msgstr ""

#: 64b933570e364a9b939528cff1fcd17e db.DatabaseConnection.connect:7 of
msgid "A user with access to the database."
msgstr ""

#: 633467c08c41450d81b2cd17ede89cf9 db.DatabaseConnection.connect:11 of
msgid "The user's password."
msgstr ""

#: 20018eb9d79f42009253b8f1312759ac db.DatabaseConnection.connect:15 of
msgid "The name of the database to connect to."
msgstr ""

#: db.DatabaseConnection.connect:19 ee7f39c298d94e4d89c7472fded9f86b of
msgid ""
"The `asyncio` loop to use. If None, `asyncpg` uses the default event "
"loop. None by default."
msgstr ""

#: 6629340ed8c144f79fbf813f3137e504 db.DatabaseConnection.connect:24 of
msgid "The port to use, usually 5432. None by default."
msgstr ""

#: 321e6be6e40c4c74a4dd9c28134f19d3 db.DatabaseConnection.close:1 of
msgid "Closes the connection to the database."
msgstr ""

#: 0270ebd99a8643dcafa8f5db96b02057 05cb54dc1a1b4561869100dca8f16fe6
#: 0d1c7b459702431c911472cb850f3c56 13115c0f0dd842718a7f17ca216bb172
#: 272a642183e54160b8d12b1561c41926 38de5337a69a450091f587e66859e4c3
#: 3fa3ed6c237340019a3ef69c695cfb21 41f33bdad38742b79687b07d8ed13614
#: 4db7eaf7416e42169bf38eade9ea2b79 71dcbfb781254299ad71e0eaaec7f9f5
#: 8916c49767404707ac7846fa0950e162 a26c62ce70b3492491169243dc60f23c
#: b01b0b5325b546bebe26004dfeac2859 d8e17688f5684d1a8a0ade00e26ca6e4
#: db.DatabaseConnection.close db.DatabaseConnection.is_connected
#: db.MusicDatabaseConnection.add_song_to_playlist
#: db.MusicDatabaseConnection.get_playlist_id
#: db.MusicDatabaseConnection.get_playlists
#: db.MusicDatabaseConnection.get_song_from
#: db.MusicDatabaseConnection.get_song_id
#: db.MusicDatabaseConnection.get_song_url
#: db.MusicDatabaseConnection.get_songs_in_playlist
#: db.MusicDatabaseConnection.get_titles
#: db.MusicDatabaseConnection.get_titles_in_playlist
#: db.MusicDatabaseConnection.get_urls
#: db.MusicDatabaseConnection.playlist_exists
#: db.MusicDatabaseConnection.song_exists
#: db.MusicDatabaseConnection.song_matches_playlist
#: f174a946419a4b4db006e2ec60260f82 of
msgid "Returns"
msgstr ""

#: a5b9f740e24c4895b875901020db2379 db.DatabaseConnection.close:3 of
msgid ""
"True if the connection was closed, False if there was no connection to "
"close."
msgstr ""

#: 1080e06b2c624ba4916cd9c2cf2ea350 13bf72fcbbb749d9ae6694ed4b5f3ffc
#: 2c9bf0db6ec846368ea6679780ec150b 569c4f49a0224c55966327e9465a90a1
#: 770011ccb3d4474eaf26fc2ad230c074 79b6590c0b81447ea323db833293ede0
#: 88ab77f20ca443a5a7a55eb8c918532f a32562595b974c0b895d79c5d24235c4
#: ad2a00f78d4c4caaab5e5f4da6b02066 bae00f2c8d69474d85deec63fe4b8940
#: c3fc4c69e26c4d4db7cb01001d49add6 db.DatabaseConnection.close
#: db.DatabaseConnection.is_connected
#: db.MusicDatabaseConnection.add_song_to_playlist
#: db.MusicDatabaseConnection.get_playlist_id
#: db.MusicDatabaseConnection.get_playlists
#: db.MusicDatabaseConnection.get_song_from
#: db.MusicDatabaseConnection.get_song_id
#: db.MusicDatabaseConnection.get_song_url
#: db.MusicDatabaseConnection.get_songs_in_playlist
#: db.MusicDatabaseConnection.get_titles
#: db.MusicDatabaseConnection.get_titles_in_playlist
#: db.MusicDatabaseConnection.get_urls
#: db.MusicDatabaseConnection.playlist_exists
#: db.MusicDatabaseConnection.song_exists
#: db.MusicDatabaseConnection.song_matches_playlist
#: e17b6d46c9c34705b65d8dbf27c313cd e5a399c02fb149ffbc51631deced26ea
#: e70d440015b04d5cbdbfb2da93bc53f6 f34195f48c74465e86a28976723502bc of
msgid "Return type"
msgstr ""

#: 2a0cb79ed4554fbb895e9857b816a4d8 db.DatabaseConnection.is_connected:1 of
msgid "Check if the connection is active."
msgstr ""

#: d75459d65e7e4bbf90b8cf607c9567c3 db.DatabaseConnection.is_connected:3 of
msgid "True if there's a connection, False otherwise."
msgstr ""

#: 67b2f0cd286f422eb103eab7c8cde02d db.MusicDatabaseConnection:1 of
msgid "Bases: :py:class:`db.DatabaseConnection`"
msgstr ""

#: 3e99066d9e9d4ff889e800f38889a055 db.MusicDatabaseConnection:1 of
msgid ""
"A class to provide an interface to manage the playlists used by the "
"`playlist` group of commands."
msgstr ""

#: acfaa05366c0450287dc02be62a2a1bb db.MusicDatabaseConnection:4 of
msgid "The name of the logger to be used by this connection."
msgstr ""

#: db.MusicDatabaseConnection.insert_song:1 fe3a0e80c64e4469bdf83d12d0956c96 of
msgid "Inserts a song in the database."
msgstr ""

#: c3d44232ad624c7eb9c6d0fc98c2c2c6 db.MusicDatabaseConnection.insert_song:3 of
msgid "The song to insert."
msgstr ""

#: 8d62ed9c53e2495e8de377e79463b2e7 a0d4f6be67eb4766a5ecfa4b7b3d7e3e
#: b61551425f964abe8980bad26d9f7145 b824109ddd2143f6a0254a453039fb1c
#: bb8e6eb1708c4eed85ece5b7c1c15ecb
#: db.MusicDatabaseConnection.add_song_to_playlist
#: db.MusicDatabaseConnection.create_playlist
#: db.MusicDatabaseConnection.delete_playlist
#: db.MusicDatabaseConnection.insert_song
#: db.MusicDatabaseConnection.remove_song_from of
msgid "Raises"
msgstr ""

#: 5f3bfea2b61243aab0e1de4a8b94ebc2 db.MusicDatabaseConnection.insert_song:7 of
msgid "Raised when an error inserting a song occurs."
msgstr ""

#: 7dab608728e944b099916062d333d63b db.MusicDatabaseConnection.get_song_id:1 of
msgid "Get the database ID of a song."
msgstr ""

#: 52d46791196f46c3baf1299ca469e787 db.MusicDatabaseConnection.get_song_id:3 of
msgid "The URL of the song to search for."
msgstr ""

#: db.MusicDatabaseConnection.get_song_id:7 f94b8ba792d6450a9c18774c2e880a9d of
msgid "The ID of the song if it exists, None otherwise."
msgstr ""

#: 51bfd4d88d9e42b6bc50c63c2cd28f1d db.MusicDatabaseConnection.get_song_url:1
#: of
msgid "Get the URL of a song."
msgstr ""

#: 7e49826e1b0c476b83c5d932fb61fce1 db.MusicDatabaseConnection.get_song_url:3
#: of
msgid "The song ID to get the URL from."
msgstr ""

#: d9c09b32c18d4c99861348867425f238 db.MusicDatabaseConnection.get_song_url:7
#: of
msgid "The URL of the song if it exists, None otherwise."
msgstr ""

#: 0adc53a9cad649eea470098117b9c6f4 db.MusicDatabaseConnection.get_titles:1 of
msgid "Get the titles of a list of songs."
msgstr ""

#: 1e17be3064f544198b3fb479d86c437d d625be2772f64dd7a98e2ad735f30ec6
#: db.MusicDatabaseConnection.get_titles:3
#: db.MusicDatabaseConnection.get_urls:3 of
msgid ""
"A list of song IDs to get. It SHOULD NOT be empty, and the IDs SHOULD be "
"in songs."
msgstr ""

#: aeda5aa523c042369208b4d2fc4899e5 db.MusicDatabaseConnection.get_titles:7 of
msgid ""
"A list of the corresponding song titles. Since the IDs SHOULD be in the "
"database, no value should be empty. However, no check is done at this "
"point."
msgstr ""

#: 40145c97f80e46b4a78b3051ea02a333 db.MusicDatabaseConnection.get_urls:1 of
msgid "Get the URLs of a list of songs."
msgstr ""

#: b14ca37da09141dfa881a3ffc96befec db.MusicDatabaseConnection.get_urls:7 of
msgid ""
"A list of the corresponding song URLs. Since the IDs SHOULD be in the "
"database, no value should be empty. However, no check is done at this "
"point."
msgstr ""

#: be2af0dcd6154806b75d955b5c6d2113
#: db.MusicDatabaseConnection.get_titles_in_playlist:1 of
msgid "Get the title of all songs in a specific playlist."
msgstr ""

#: 23c65dd577e24deda59384fdd6027aa4 6c76553a8a1d439abb607a4ad4fff79d
#: db.MusicDatabaseConnection.get_songs_in_playlist:3
#: db.MusicDatabaseConnection.get_titles_in_playlist:3 of
msgid "The title of the playlist to get the songs from."
msgstr ""

#: 428faff4ed824b2c81a1744058695807 47e48411f99243308e680bf8356cdd35
#: 92dd6be344284d8a8a8b910763a27cd9 db.MusicDatabaseConnection.get_song_from:12
#: db.MusicDatabaseConnection.get_songs_in_playlist:7
#: db.MusicDatabaseConnection.get_titles_in_playlist:7 of
msgid "The discord ID of the owner of the playlist."
msgstr ""

#: 2d5ca6f6df694bc3941c60ad0017cba0
#: db.MusicDatabaseConnection.get_titles_in_playlist:11 of
msgid ""
"A list of the titles of all the songs in the playlist, or None if the "
"playlist doesn't exist, or if it doesn't have any songs."
msgstr ""

#: 8056474a497b49c78349b90e4a9d8d4e db.MusicDatabaseConnection.get_song_from:1
#: of
msgid "Get a song from a playlist by its index."
msgstr ""

#: 6a998739ab9f4e18a300b376cd965eac db.MusicDatabaseConnection.get_song_from:3
#: of
msgid ""
"The index of the song in the playlist (as displayed with "
":func:`get_titles_in_playlist`)."
msgstr ""

#: 06802c60c7f3433296422dfaeb92c150 db.MusicDatabaseConnection.get_song_from:8
#: of
msgid "The title of the playlist to get the song from."
msgstr ""

#: 91b414e6e0ec4dc595efd9e5e05c1153 db.MusicDatabaseConnection.get_song_from:16
#: of
msgid "The song's URL if it exists in the playlist, None otherwise."
msgstr ""

#: b1173cb0b4ae47978e9a49126cf89028
#: db.MusicDatabaseConnection.get_songs_in_playlist:1 of
msgid "Get the URLs of all songs in a specific playlist."
msgstr ""

#: cdf4585ec8b44e0781b2b725b47d68d2
#: db.MusicDatabaseConnection.get_songs_in_playlist:11 of
msgid ""
"A list of the URLs of all the songs in the playlist, or None if the "
"playlist doesn't exist, or if it doesn't have any songs."
msgstr ""

#: 64aaf88ea23442ce8c79481c1641f1aa db.MusicDatabaseConnection.song_exists:1 of
msgid "Check if a song exists in the database."
msgstr ""

#: bf5be0aa34834b87ab3b873a28745908 db.MusicDatabaseConnection.song_exists:3 of
msgid "The song to search for."
msgstr ""

#: 887b7fba078f43ac9abcaff7b7ea3f9f db.MusicDatabaseConnection.song_exists:7 of
msgid "True if the song exists, False otherwise."
msgstr ""

#: 9e0e85f18f4b48289434acf2525d9c63
#: db.MusicDatabaseConnection.song_matches_playlist:1 of
msgid "Check if a song is matched to a playlist in songs_in_lists."
msgstr ""

#: b2c8c2d054324b81bbc0bb8fedf2ecd7
#: db.MusicDatabaseConnection.song_matches_playlist:3 of
msgid "The song to check."
msgstr ""

#: 9e1d929d64984057b668f7e96b5670ae
#: db.MusicDatabaseConnection.song_matches_playlist:7 of
msgid "The title of the playlist to check."
msgstr ""

#: b63ea9fc495c4e778a3b8cc868d64a22
#: db.MusicDatabaseConnection.song_matches_playlist:11 of
msgid "The owner of the playlist to check."
msgstr ""

#: 36a03001e08941eaa2063a0c2a294a99
#: db.MusicDatabaseConnection.song_matches_playlist:15 of
msgid "True if the song and the playlist are matched, False otherwise."
msgstr ""

#: 2f97ed67bfc64febbb8ad8b73cfa66db
#: db.MusicDatabaseConnection.match_song_to_playlist:1 of
msgid "Match a song to a playlist, ie. create a row in songs_in_lists."
msgstr ""

#: 3449c8613dbc493bbcedb2595f9e2022
#: db.MusicDatabaseConnection.match_song_to_playlist:3 of
msgid "The song to match. It must already be in the database."
msgstr ""

#: 6a09fbe55aad477b8b299d3ba1d205a6
#: db.MusicDatabaseConnection.match_song_to_playlist:7 of
msgid "The title of the playlist to match. It must already be in the database."
msgstr ""

#: 49c0d3ebc05f4783818ab8f52b6d7506
#: db.MusicDatabaseConnection.match_song_to_playlist:11 of
msgid "The owner of the playlist to match. It must already be in the database."
msgstr ""

#: 5e94fb6f1a2c4378b47ca8573170469d
#: db.MusicDatabaseConnection.remove_song_from:1 of
msgid "Removes a song from a playlist."
msgstr ""

#: db.MusicDatabaseConnection.remove_song_from:3
#: e37795642e87406fb788624ce565befd of
msgid "The title of the playlist."
msgstr ""

#: 5d071ca8be7d407f80b4cc7bb53aa6a4
#: db.MusicDatabaseConnection.remove_song_from:7 of
msgid "The owner of the playlist."
msgstr ""

#: 8727cd9d436f455d98b86dd9574f90fa
#: db.MusicDatabaseConnection.remove_song_from:11 of
msgid "The index of the song in the playlist."
msgstr ""

#: 05c219b6815c4eb1a1747b26330d8149
#: db.MusicDatabaseConnection.remove_song_from:15 of
msgid "Raised when the song is not in the database."
msgstr ""

#: 292b0b21a4814b53855e9a8957cc69eb
#: db.MusicDatabaseConnection.remove_song_from:18 of
msgid "Raised when an error removing the song occurs."
msgstr ""

#: 49076d65296a41c9b9155b80459dc978
#: db.MusicDatabaseConnection.create_playlist:1 of
msgid ""
"Create a new playlist if one with that title and owner doesn't already "
"exist."
msgstr ""

#: 1894b3e548b8447db1ec2b06969649c9 4be40c5938d84840aff3096d96dcca65
#: db.MusicDatabaseConnection.create_playlist:3
#: db.MusicDatabaseConnection.delete_playlist:3 of
msgid "The name of the playlist."
msgstr ""

#: 1025dac399c44cf78e101740e31a250d
#: db.MusicDatabaseConnection.create_playlist:7
#: db.MusicDatabaseConnection.delete_playlist:7
#: e271fea826c74e278a90db4d7062ba65 of
msgid "The discord ID of the user using the command, who owns this playlist."
msgstr ""

#: 7299b14c33a0441fb7e5a3682158b2fc
#: db.MusicDatabaseConnection.create_playlist:11 of
msgid ""
"Raised when an error occurs while creating the list or when the playlist "
"already exists."
msgstr ""

#: a3f7ddcc51714f6a9b9e27c5eac7bdd5
#: db.MusicDatabaseConnection.delete_playlist:1 of
msgid "Delete a playlist if it exists."
msgstr ""

#: db.MusicDatabaseConnection.delete_playlist:11
#: e30153e32be7459bb1188bea0ffe6b9b of
msgid "Raised when an error occurs while deleting the list."
msgstr ""

#: 28bc71af917148eaaffa0bade718fa06 db.MusicDatabaseConnection.get_playlists:1
#: of
msgid "Get all playlists owned by a specific user."
msgstr ""

#: d599af242ddd40b291212911affe99e3 db.MusicDatabaseConnection.get_playlists:3
#: of
msgid "The discord ID of the user to search for."
msgstr ""

#: bc045304639b4e7780258dc2d0614aed db.MusicDatabaseConnection.get_playlists:7
#: of
msgid "A list of the title of each playlist the user owns if any, None otherwise."
msgstr ""

#: 778c4b5e5d7b4d72829a6dbb24adb248
#: db.MusicDatabaseConnection.add_song_to_playlist:1 of
msgid ""
"Add a song to a playlist if it's owned by the calling user. Creates the "
"playlist if it doesn't exist."
msgstr ""

#: 5f05db7b1ca74467b385c09d3eaf47e8
#: db.MusicDatabaseConnection.add_song_to_playlist:4 of
msgid "The song to add."
msgstr ""

#: 0b38cf023ad04f3caa85bc63125901ca
#: db.MusicDatabaseConnection.add_song_to_playlist:8 of
msgid "The title of the playlist to add the song to."
msgstr ""

#: 239467b6c3fe44e2865542b8c4645941 5d1d5edf99e44477b9da5a2789c73dfc
#: db.MusicDatabaseConnection.add_song_to_playlist:12
#: db.MusicDatabaseConnection.playlist_exists:7 of
msgid "The discord ID of the calling user."
msgstr ""

#: a0d22bb75066468f84cd78eae47c45a9
#: db.MusicDatabaseConnection.add_song_to_playlist:16 of
msgid ""
"When a problem creating the playlist/inserting the song/adding it to the "
"playlist occurs."
msgstr ""

#: ac045b18d0c84b4da0a2dcc08ca32bd6
#: db.MusicDatabaseConnection.add_song_to_playlist:20 of
msgid "A message to send to the calling user."
msgstr ""

#: db.MusicDatabaseConnection.get_playlist_id:1
#: f7f5a2aab1b840038ba06c7398718953 of
msgid "Get the database ID of a playlist."
msgstr ""

#: 403a7e65362843759ca5e3b419fc27f2 52fee716f1864a91a9fd5bf2dcff804d
#: db.MusicDatabaseConnection.get_playlist_id:3
#: db.MusicDatabaseConnection.playlist_exists:3 of
msgid "The title of the playlist to search for."
msgstr ""

#: 5c70f2ed556347078c368e79a61a7e2d
#: db.MusicDatabaseConnection.get_playlist_id:7 of
msgid "The ID of the owner of the playlist."
msgstr ""

#: 9c159bfc1e5741329be72cabff55cca9
#: db.MusicDatabaseConnection.get_playlist_id:11 of
msgid "The ID of the playlist if it exists, None otherwise."
msgstr ""

#: a5115b064b964586aab11194859cac91
#: db.MusicDatabaseConnection.playlist_exists:1 of
msgid "Check if a playlist exists in the database."
msgstr ""

#: 8dead8f21bef49a6a7adcdd64cd960d4
#: db.MusicDatabaseConnection.playlist_exists:11 of
msgid "True if a playlist with that title and owner exists."
msgstr ""

#: a6818ddd155448e5b25d6f577c117e18 db.DbInsertError:1 db.NotFoundError:1
#: f903b19b7a8f444a98d3446a5f26a9c7 of
msgid "Bases: :py:class:`Exception`"
msgstr ""

#: 73beaacc898b4cbdad00f3758ab9a336 db.DbInsertError:1 of
msgid "Raised when an error related to INSERT occurs."
msgstr ""

#: 7e104d7b75c14f95b6d6f3f44b128e90 db.NotFoundError:1 of
msgid "Raised when an error related to a missing result occurs."
msgstr ""

#~ msgid "Bases: :class:`object`"
#~ msgstr ""

#~ msgid "Bases: :class:`db.DatabaseConnection`"
#~ msgstr ""

#~ msgid "Bases: :class:`Exception`"
#~ msgstr ""

